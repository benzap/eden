;; Fully Functional Web Server running in eden

local _v = vector

;;
;; CSS Stylesheet
;;

local stylesheet = [
  _v(:* {:background-color "#fdfdfd"})
  _v(:body {:margin "1em"})
]


function generate-css()
  local s = ""
  for rule in stylesheet do
    s = str(s html.css.gen-css(rule))
  end
  return s
end

;;
;; HTML Generation
;;

function element(name)
  return vec(concat([keyword(name)] rest(*arguments*)))
end

el = {
  :html (partial(element "html"))
  :head (partial(element "head"))
  :body (partial(element "body"))
  :style (partial(element "style"))
  :h1 (partial(element "h1"))
  :p (partial(element "p"))
  :a (partial(element "a"))
  :title (partial(element "title"))
}

;;
;; Request Handlers
;;

local home-count = 0
local home-page = function(req)
  home-count = home-count + 1

  return http.server.response(html.stringify(
    el.html(
      el.head(
        el.title("Home Page - Eden Server")
        el.style(generate-css()))
        el.body(
          el.h1("Hello from Eden!")
          el.p("You have accessed this page " home-count " times.")
	  el.a({:href "about.html"} "About Me")
  ))))
end

local about-count = 0
local about-page = function(req)
  about-count = about-count + 1

  return http.server.response(html.stringify(
    el.html(
      el.head(
        el.title("About Page - Eden Server")
        el.style(generate-css()))
        el.body(
          el.h1("Hello from Eden!")
          el.p("You have accessed this page " about-count " times.")
	  el.a({:href "index.html"} "Home Page")
  ))))
end


;;
;; Routing
;;

local routes = ["/" {"index.html" home-page
                     "about.html" about-page}]


local app = http.router.make-handler(routes)


http.server.run-server(app {:port 8000})


println("Started Web Server")
println("Access at http://localhost:8000/index.html")